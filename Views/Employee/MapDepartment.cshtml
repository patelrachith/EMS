@model EMS.ViewModels.EmployeeDepartment

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container p-3 my-3 border">
    <h1> Map to Department</h1>

    <div class="row">
        <div class="col-sm-6">
            <hr />
            <form asp-action="MapDepartment" >
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">

                    <label class="control-label">Select Employee</label>
                    @Html.DropDownListFor(m => m.EmployeeId, new SelectList(Model.Employiees, "EmployeeId", "FirstName"), "Select Employee", new { @class = "form-control", onchange = "UpdateDepartment(this);" })
                    <span asp-validation-for="EmployeeId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Select Department(s)</label>
                    
                    @Html.ListBoxFor(m => m.DepartmentIds, new MultiSelectList(Model.Departments, "DepartmentId", "Name", Model.DepartmentIds), new { @class = "listbox form-control", multiple = "multiple" })

                </div>
                <div class="form-group">
                    <input class="btn btn-primary" type="submit" value="Save" />
                    <a class="btn btn-danger" asp-action="Index">Back</a>
                </div>
            </form>
        </div>
    </div>
</div>





@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    function UpdateDepartment(obj) {

        var employeeID = obj.value;
        $.ajax({
            url: '/Employee/MapDepartment',
            type: "GET",
            dataType: "JSON",
            data: { employeeId: employeeID },
            success: function (departmentIds) {
                alert(departmentIds);
            }
        });
    }
</script>
